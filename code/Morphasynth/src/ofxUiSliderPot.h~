#ifndef OFXUI_SLIDER_POT
#define OFXUI_SLIDER_POT

//#include "ofxUIWidgetWithLabel.h" // ya lo tenemos por herencia
#include "ofxUISlider.h";

class ofxUiSliderPot : public ofxUISlider
{


public:
    //ofxUiSliderPot() {}
    
   /* ofxUiSliderPot(float x, float y, float w, float h, float _min, float _max, float _value, string _name)
    {
        rect = new ofxUIRectangle(x,y,w,h); 
        init(w, h, _min, _max, _value, _name); 		
    }*/

    
    ofxUiSliderPot(float w, float h, float _min, float _max, float _value, string _name)
    {
	ofxUISlider::ofxUISlider(w, h, _min, _max, _value, _name);
	//ofxUISlider::init(w, h, _min, _max, _value, _name);
	std::cout << "entra al constructor\n";
	//rect = new ofxUIRectangle(0,0,w,h);   	
	//hola!!
	std::cout << "pasa el init\n";
    }    
    
    //void init(float w, float h, float _min, float _max, float _value, string _name)
    //{
	//ofxUISlider(w, h, _min, _max, _value, _name);
      /*  name = _name; 				
		if(w > h)
		{
			kind = OFX_UI_WIDGET_SLIDER_H;  			
		}
		else 
		{
			kind = OFX_UI_WIDGET_SLIDER_V;  			
		}
        
		paddedRect = new ofxUIRectangle(-padding, -padding, w+padding*2.0, h+padding);
		paddedRect->setParent(rect);     
        
        draw_fill = true; 
        
        value = _value;                                               //the widget's value
		max = _max; 
		min = _min; 
        labelPrecision = 2;
        
		if(value > max)
		{
			value = max; 
		}
		if(value < min)
		{
			value = min; 
		}
		
		value = ofMap(value, min, max, 0.0, 1.0, true); 
        
		if(kind == OFX_UI_WIDGET_SLIDER_H)
		{
			label = new ofxUILabel(0,h+padding,(name+" LABEL"), (name + ": " + ofToString(max,labelPrecision)), OFX_UI_FONT_SMALL); 
		}
		else 
		{
			label = new ofxUILabel(0,h+padding,(name+" LABEL"), name, OFX_UI_FONT_SMALL); 	
		}
        
		label->setParent(label); 
		label->setRectParent(rect); 
        increment = 1.0;  */       
   // }

    float getPotValue(){
	float retorno = -1;
	return retorno;
	}

   
}; 

#endif
